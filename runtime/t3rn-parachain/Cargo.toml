[package]
authors     = { workspace = true }
description = "t3rn - parachain runtime to Polkadot"
edition     = { workspace = true }
homepage    = { workspace = true }
license     = { workspace = true }
name        = "t3rn-parachain-runtime"
repository  = { workspace = true }
version     = "1.0.0"

[package.metadata.docs.rs]
targets = [ "x86_64-unknown-linux-gnu" ]

[build-dependencies]
substrate-wasm-builder = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.27" }

[dependencies]
codec      = { workspace = true, package = "parity-scale-codec" }
log        = { workspace = true }
scale-info = { workspace = true }
serde      = { workspace = true, optional = true, features = [ "derive" ] }
smallvec   = { workspace = true }

# Enabled by benchmarks
frame-benchmarking        = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }
hex-literal               = { version = "0.3.4", optional = true }

# Substrate
frame-executive              = { workspace = true }
frame-support                = { workspace = true }
frame-system                 = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
frame-try-runtime            = { workspace = true, optional = true }

pallet-aura                                = { workspace = true }
pallet-authorship                          = { workspace = true }
pallet-balances                            = { workspace = true }
pallet-preimage                            = { workspace = true }
pallet-randomness-collective-flip          = { workspace = true }
pallet-scheduler                           = { workspace = true }
pallet-session                             = { workspace = true }
pallet-sudo                                = { workspace = true }
pallet-timestamp                           = { workspace = true }
pallet-transaction-payment                 = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-treasury                            = { workspace = true }
pallet-utility                             = { workspace = true }

sp-api              = { workspace = true }
sp-block-builder    = { workspace = true }
sp-consensus-aura   = { workspace = true }
sp-core             = { workspace = true }
sp-inherents        = { workspace = true }
sp-io               = { workspace = true }
sp-offchain         = { workspace = true }
sp-runtime          = { workspace = true }
sp-session          = { workspace = true }
sp-std              = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version          = { workspace = true }

# Polkadot
pallet-xcm                 = { workspace = true }
polkadot-parachain         = { workspace = true }
polkadot-runtime-common    = { workspace = true }
polkadot-runtime-constants = { workspace = true }
xcm                        = { workspace = true }
xcm-builder                = { workspace = true }
xcm-executor               = { workspace = true }

# Cumulus
cumulus-pallet-aura-ext             = { workspace = true }
cumulus-pallet-dmp-queue            = { workspace = true }
cumulus-pallet-parachain-system     = { workspace = true }
cumulus-pallet-session-benchmarking = { workspace = true, version = "3.0.0" }
cumulus-pallet-xcm                  = { workspace = true }
cumulus-pallet-xcmp-queue           = { workspace = true }
cumulus-primitives-core             = { workspace = true }
cumulus-primitives-timestamp        = { workspace = true }
cumulus-primitives-utility          = { workspace = true }
pallet-collator-selection           = { workspace = true }
parachain-info                      = { workspace = true }

# t3rn Deps
# t3rn-primitives = { default-features = false, path = "../../primitives" }
# t3rn-types = { default-features = false, path = "../../types", features = [ "runtime" ] }

# # t3rn pallets
# pallet-account-manager           = { path = "../../pallets/account-manager", default-features = false }
# pallet-circuit                   = { path = "../../pallets/circuit", package = "pallet-circuit", default-features = false }
# pallet-clock                     = { path = "../../pallets/clock", default-features = false }
# pallet-contracts-registry        = { path = "../../pallets/contracts-registry", default-features = false }
# pallet-grandpa-finality-verifier = { path = "../../finality-verifiers/grandpa", default-features = false }
# pallet-portal                    = { path = "../../pallets/portal", default-features = false }
# pallet-portal-rpc-runtime-api    = { path = "../../pallets/portal/rpc/runtime-api", default-features = false }
# pallet-xdns                      = { path = "../../pallets/xdns", default-features = false }
# pallet-xdns-rpc-runtime-api      = { path = "../../pallets/xdns/rpc/runtime-api", default-features = false }

# pallet-asset-registry = { workspace = true }
# pallet-xbi-portal     = { workspace = true }

# # Smart contracts VMs
# evm-precompile-util                  = { default-features = false, path = "../../pallets/evm/precompile/util", package = "precompile-util" }
# pallet-3vm                           = { default-features = false, path = "../../pallets/3vm" }
# pallet-3vm-contracts                 = { default-features = false, path = "../../pallets/contracts", package = "pallet-contracts" }
# pallet-3vm-contracts-primitives      = { default-features = false, path = "../../pallets/contracts/primitives", package = "pallet-contracts-primitives" }
# pallet-3vm-contracts-rpc-runtime-api = { default-features = false, path = "../../pallets/contracts/rpc/runtime-api", package = "pallet-contracts-rpc-runtime-api" }
# pallet-3vm-evm                       = { default-features = false, path = "../../pallets/evm", package = "pallet-evm" }
# pallet-3vm-evm-primitives            = { default-features = false, path = "../../pallets/evm/primitives", package = "fp-evm" }
# pallet-evm-rpc-runtime-api           = { default-features = false, path = "../../pallets/evm/rpc/runtime-api" }

# Commons
circuit-runtime-types = { path = "../common-types", default-features = false }

[features]
default = [ "std" ]
std = [
  "codec/std",
  "log/std",
  "scale-info/std",
  "serde/std",
  "cumulus-pallet-aura-ext/std",
  "cumulus-pallet-session-benchmarking/std",
  "cumulus-pallet-dmp-queue/std",
  "cumulus-pallet-parachain-system/std",
  "cumulus-pallet-xcm/std",
  "cumulus-pallet-xcmp-queue/std",
  "cumulus-primitives-core/std",
  "cumulus-primitives-timestamp/std",
  "cumulus-primitives-utility/std",
  "frame-executive/std",
  "frame-support/std",
  "frame-system-rpc-runtime-api/std",
  "frame-system/std",
  "pallet-aura/std",
  "pallet-authorship/std",
  "pallet-randomness-collective-flip/std",
  "pallet-utility/std",
  "polkadot-runtime-constants/std",
  "pallet-balances/std",
  "pallet-collator-selection/std",
  "pallet-preimage/std",
  'pallet-scheduler/std',
  "pallet-session/std",
  "pallet-sudo/std",
  "pallet-timestamp/std",
  "pallet-transaction-payment-rpc-runtime-api/std",
  "pallet-transaction-payment/std",
  "pallet-treasury/std",
  "pallet-xcm/std",
  "parachain-info/std",
  "polkadot-parachain/std",
  "polkadot-runtime-common/std",
  "smallvec/write",
  "sp-api/std",
  "sp-block-builder/std",
  "sp-consensus-aura/std",
  "sp-core/std",
  "sp-inherents/std",
  "sp-io/std",
  "sp-offchain/std",
  "sp-runtime/std",
  "sp-session/std",
  "sp-std/std",
  "sp-transaction-pool/std",
  "sp-version/std",
  "xcm-builder/std",
  "xcm-executor/std",
  "xcm/std",
  "circuit-runtime-types/std",

  # "pallet-account-manager/std",
  # "pallet-asset-registry/std",
  # "pallet-circuit/std",
  # "pallet-clock/std",
  # "pallet-contracts-registry/std",
  # "pallet-grandpa-finality-verifier/std",
  # "pallet-portal/std",
  # "pallet-portal-rpc-runtime-api/std",
  # "pallet-xbi-portal/std",
  # "pallet-xdns/std",
  # "pallet-xdns-rpc-runtime-api/std",

  # "evm-precompile-util/std",
  # "pallet-3vm/std",
  # "pallet-3vm-contracts/std",
  # "pallet-3vm-contracts-primitives/std",
  # "pallet-3vm-contracts-rpc-runtime-api/std",
  # "pallet-3vm-evm/std",
  # "pallet-3vm-evm-primitives/std",
  # "pallet-evm-rpc-runtime-api/std",
  # "t3rn-primitives/std",
  # "t3rn-types/std",
]

runtime-benchmarks = [
  "hex-literal",
  "frame-benchmarking/runtime-benchmarks",
  "frame-support/runtime-benchmarks",
  "frame-system-benchmarking",
  "frame-system/runtime-benchmarks",
  "pallet-balances/runtime-benchmarks",
  "pallet-collator-selection/runtime-benchmarks",
  "pallet-timestamp/runtime-benchmarks",
  "pallet-treasury/runtime-benchmarks",
  "pallet-utility/runtime-benchmarks",
  "pallet-scheduler/runtime-benchmarks",
  "pallet-preimage/runtime-benchmarks",
  "pallet-xcm/runtime-benchmarks",
  "sp-runtime/runtime-benchmarks",
  "xcm-builder/runtime-benchmarks",
  "xcm-executor/runtime-benchmarks",
  "polkadot-runtime-common/runtime-benchmarks",
  "polkadot-parachain/runtime-benchmarks",
  "cumulus-pallet-session-benchmarking/runtime-benchmarks",
  "cumulus-pallet-xcmp-queue/runtime-benchmarks",
  "cumulus-pallet-parachain-system/runtime-benchmarks",
]

try-runtime = [
  "frame-executive/try-runtime",
  "frame-try-runtime",
  "polkadot-runtime-common/try-runtime",
  "pallet-utility/try-runtime",
  "pallet-treasury/try-runtime",
  "pallet-timestamp/try-runtime",
  "pallet-transaction-payment/try-runtime",
  "pallet-sudo/try-runtime",
  "pallet-session/try-runtime",
  "pallet-scheduler/try-runtime",
  "pallet-randomness-collective-flip/try-runtime",
  "pallet-preimage/try-runtime",
  "pallet-collator-selection/try-runtime",
  "pallet-balances/try-runtime",
  "pallet-authorship/try-runtime",
  "pallet-aura/try-runtime",
  "frame-system/try-runtime",
  "frame-support/try-runtime",
]
