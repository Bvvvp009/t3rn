name: Circuit Build & Test CI

on:
  pull_request:
    paths:
      - '**/*.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - '.github/workflows/circuit.yml'
      - '.git/modules/*/HEAD'

env:
  RUST_BACKTRACE: 1

jobs:
  format:
    runs-on: ["self-hosted", "rust"]
    steps:
      - name: ☁️Checkout git repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}

      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2023-01-24
          profile: minimal
          components: rustfmt
          override: true
      - name: 📜 Format code
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  lint:
    runs-on: ["self-hosted", "rust"]
    steps:
      - name: ☁️Checkout git repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}

      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2023-01-24
          target: wasm32-unknown-unknown
          components: rustfmt, clippy
          override: true

      - name: 📑 Lint code with clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all

  build-test:
    runs-on: ["self-hosted", "rust"]
    needs: [format]
    steps:
      - name: ☁ Checkout git repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}
          
      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2023-01-24
          target: wasm32-unknown-unknown
          components: rustfmt, clippy
          override: true

      - name: 🏭 Build circuit
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: build
          args: --locked

      - name: 📼 Run unit tests
        continue-on-error: false
        run: |
          cargo test --workspace --locked --manifest-path Cargo.toml
