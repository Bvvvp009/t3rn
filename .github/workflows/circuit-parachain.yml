name: Circuit Parachain Build & Test CI

on:
  pull_request:
    paths:
      - circuit-parachain/**/*.rs
      - circuit-parachain/**/Cargo.toml
      - circuit-parachain/**/Cargo.lock
      - .github/workflows/circuit-parachain.yml

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  format:
    runs-on: self-hosted
    steps:
      - name: ☁️Checkout git repo
        uses: actions/checkout@master

      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-09-29
          profile: minimal
          components: rustfmt
          override: true

      - name: 📜 Format code
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --manifest-path circuit-parachain/Cargo.toml -- --check

  lint:
    runs-on: self-hosted
    steps:
      - name: ☁️Checkout git repo
        uses: actions/checkout@master

      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-09-29
          target: wasm32-unknown-unknown
          components: clippy
          override: true

      - name: 🕒 Cache Rust binaries and packages
        uses: actions/cache@v2
        id: cache-rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            circuit-parachain/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('circuit-parachain/Cargo.lock') }}

      - name: 📑 Lint code
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --manifest-path circuit-parachain/Cargo.toml

  build:
    runs-on: self-hosted
    needs: [format, lint]
    steps:
      - name: ☁ Checkout git repo
        uses: actions/checkout@master

      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-09-29
          target: wasm32-unknown-unknown
          override: true

      - name: 🕒 Cache Rust binaries and packages
        uses: actions/cache@v2
        id: cache-rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            circuit-parachain/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('circuit-parachain/Cargo.lock') }}

      - name: 🏭 Build circuit
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: build
          args: --locked --manifest-path circuit-parachain/Cargo.toml

      - name: 📤 Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}-parachain-artifacts
          path: circuit-parachain/target/debug/circuit-collator
          if-no-files-found: error
  test:
    runs-on: self-hosted
    needs: [build]
    steps:
      - name: ☁️Checkout git repo
        uses: actions/checkout@master


      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-09-29
          target: wasm32-unknown-unknown
          override: true

      - name: 🕒 Cache Rust binaries and packages
        uses: actions/cache@v2
        id: cache-rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            circuit-parachain/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('circuit-parachain/Cargo.lock') }}

      - name: Download circuit
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}-parachain-artifacts
          path: circuit-parachain/target/debug/

      - name: 📼 Run unit tests
        continue-on-error: false
        run: |
          chmod +x circuit-parachain/target/debug/circuit-collator
          circuit-parachain/target/debug/circuit-collator --alice --log=main,debug --tmp > /dev/null 2>&1 &
          cargo test --workspace --locked --manifest-path circuit-parachain/Cargo.toml
