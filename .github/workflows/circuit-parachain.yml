name: Circuit Parachain Build & Test CI

on:
  pull_request:
    paths:
      - ./**/*.rs
      - ./Cargo.toml
      - ./Cargo.lock
      - pallets/**/*.rs
      - pallets/**/Cargo.toml
      - pallets/**/Cargo.lock
      - .github/workflows/circuit-parachain.yml

jobs:
  format:
    runs-on: self-hosted
    steps:
      - name: ☁️Checkout git repo
        uses: actions/checkout@master
        with:
          submodules: recursive
      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-11-01
          profile: minimal
          components: rustfmt
          override: true

      - name: 📜 Format code
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  lint:
    runs-on: self-hosted
    steps:
      - name: ☁️Checkout git repo
        uses: actions/checkout@master

      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-11-01
          target: wasm32-unknown-unknown
          components: rustfmt, clippy
          override: true

      - name: 🕒 Cache Rust binaries and packages
        uses: actions/cache@v2
        id: cache-rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}

      - name: 📑 Lint code
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --features with-parachain-runtime

  build-test:
    runs-on: self-hosted
    needs: [format, lint]
    steps:
      - name: ☁ Checkout git repo
        uses: actions/checkout@master

      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-11-01
          target: wasm32-unknown-unknown
          components: rustfmt, clippy
          override: true

      - name: 🕒 Cache Rust binaries and packages
        uses: actions/cache@v2
        id: cache-rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}

      - name: 🏭 Build circuit
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: build
          args: --locked --features with-parachain-runtime

      - name: 📼 Run unit tests
        continue-on-error: false
        run: |
          chmod +x target/debug/circuit-collator
          target/debug/circuit-collator --alice --log=main,debug --tmp > /dev/null 2>&1 &
          cargo test --workspace --locked --manifest-path Cargo.toml
